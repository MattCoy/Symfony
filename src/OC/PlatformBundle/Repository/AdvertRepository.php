<?php

namespace OC\PlatformBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAdverts($page, $nbPerPage){
        $query = $this->createQueryBuilder('a')
            ->innerJoin('a.image', 'img')
            ->addSelect('img')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->orderBy('a.date', 'DESC')
            ->getQuery()
        ;

        $query
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($page-1) * $nbPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($nbPerPage)
        ;

        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($query, true);
    }
    
    public function getAdvertWithCategories(array $categoryNames)
    {
      $queryBuilder = $this
              ->createQueryBuilder('a')
              ->leftJoin('a.categories', 'cat')
              ->addSelect('cat')
      ;

      // Puis on filtre sur le nom des catégories à l'aide d'un IN
      $queryBuilder->where($queryBuilder->expr()->in('cat.name', $categoryNames));

      // On retourne ces résultats
      return $queryBuilder
              ->getQuery()
              ->getResult();
    }

    public function getAdvertWithApplications()
    {
      $qb = $this
        ->createQueryBuilder('a')
        ->leftJoin('a.applications', 'app')
        ->addSelect('app')
      ;

      return $qb
        ->getQuery()
        ->getResult()
      ;
    }
}
